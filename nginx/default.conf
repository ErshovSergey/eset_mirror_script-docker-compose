map $http_user_agent $update_ver {
#  ~.*BPC.[3].* /eset_upd/v3/update.ver;
#  ~.*BPC.[4].* /eset_upd/v4/update.ver;
  ~.*BPC.[5].* /eset_upd/v5/update.ver;
  ~.*BPC.[6].* /eset_upd/ep6/update.ver;
#/home/ESETBASE-UPDATE/nod32-base/eset_upd/ep7/dll/update.ver
#  ~.*BPC.[7].* /eset_upd/v7/update.ver;
  ~.*BPC.[7].* /eset_upd/ep7/dll/update.ver;
  ~.*BPC.[8].* /eset_upd/ep8/dll/update.ver;
#  ~.*BPC.[9].* /eset_upd/v9/update.ver;
#  ~.*BPC.[10].* /eset_upd/v10/update.ver;
#  ~.*BPC.[11].* /eset_upd/v10/update.ver;
  ~.*.Gecko.* /index.html;
}

server {

  root /eset_mirror_script/www;
  index index.html;

  server_name _;
  set $htpasswd     "/etc/nginx/.htpasswd";

  location / {
    # для отключения авторизации закомментировать следующие две строки
    auth_basic "Enter login:password for getting access";
    auth_basic_user_file $htpasswd;

    set $ver "NotFound";
    if ($http_user_agent ~ "^.*(EEA|EES|ESS|EFSW)+\s+Update.*BPC\s+(\d+)\..*"){
      set $ver $2;
    }

    if ($ver ~ '^[5]+$') {
      rewrite ^/update.ver$           $update_ver break;
      rewrite ^/eset_upd/update.ver$  $update_ver break;
    }
##    if ($ver ~ '^[6]+$') {
##      rewrite ^/update.ver$           $update_ver break;
##      rewrite ^/eset_upd/update.ver$  $update_ver break;
##    }

    if ($ver ~ '^[7-8]+$') {
      rewrite ^/update.ver$     $update_ver break;
      rewrite ^/dll/update.ver$ $update_ver break;
    }

#    if ($http_user_agent ~ "^.*(EEA|EES|ESS|EFSW)+\s+Update.*BPC\s+(\d+)\..*$"){
#      return 403;
#    }

    if ($ver ~ '^(5|9)+$') {
      rewrite ^/update.ver$ /eset_upd/v$ver/update.ver break;
      rewrite ^/eset_upd/update.ver$ /eset_upd/v$ver/update.ver break;
    }

     if ($ver ~ "^1[0-1]+$"){
      rewrite ^/update.ver$ /eset_upd/v10/dll/update.ver break;
      rewrite ^/eset_upd/update.ver$ /eset_upd/v10/dll/update.ver break;
    }

    if ($ver ~ "^NotFound"){
      rewrite $ /index.html break;
    }
  }

}
